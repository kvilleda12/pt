"""user_info table. Reorganizing schemas

Revision ID: 713b1154b689
Revises: 5f86df93f35e
Create Date: 2025-07-16 12:01:48.734672

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '713b1154b689'
down_revision: Union[str, None] = '5f86df93f35e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_info',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username'),
    sa.UniqueConstraint('username', 'email'),
    schema='frontend_data'
    )
    op.create_table('part',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('upper_count', sa.Integer(), nullable=False),
    sa.Column('lower_count', sa.Integer(), nullable=False),
    sa.CheckConstraint('id IN ( 1, 2, 3)', name='check_valid_bp_id'),
    sa.PrimaryKeyConstraint('id'),
    schema='training_sources'
    )
    op.create_table('body_part_counts',
    sa.Column('id', sa.Enum('n', 'f', 'h', 'a', 'l', 's', 'c', 'b', 'e', name='body_id_enum'), nullable=False),
    sa.Column('counts', sa.Integer(), nullable=False),
    sa.Column('where', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['where'], ['training_sources.part.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='training_sources'
    )
    op.create_table('research_paper_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paper_name', sa.String(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('where', sa.String(), nullable=False),
    sa.Column('part_id', sa.Enum('n', 'f', 'h', 'a', 'l', 's', 'c', 'b', 'e', name='body_id_enum'), nullable=False),
    sa.ForeignKeyConstraint(['part_id'], ['training_sources.body_part_counts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('paper_name', name='uq_textbook'),
    schema='training_sources'
    )
    op.create_index(op.f('ix_training_sources_research_paper_sources_id'), 'research_paper_sources', ['id'], unique=True, schema='training_sources')
    op.create_table('textbook_sources',
    sa.Column('textbook_id', sa.Integer(), nullable=False),
    sa.Column('textbook_name', sa.String(), nullable=False),
    sa.Column('author', sa.String(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=False),
    sa.Column('where', sa.String(), nullable=False),
    sa.Column('part_id', sa.Enum('n', 'f', 'h', 'a', 'l', 's', 'c', 'b', 'e', name='body_id_enum'), nullable=False),
    sa.ForeignKeyConstraint(['part_id'], ['training_sources.body_part_counts.id'], ),
    sa.PrimaryKeyConstraint('textbook_id'),
    sa.UniqueConstraint('textbook_name', 'author', name='uq_textbook_author'),
    schema='training_sources'
    )
    op.create_index(op.f('ix_training_sources_textbook_sources_textbook_id'), 'textbook_sources', ['textbook_id'], unique=True, schema='training_sources')
    op.create_table('image_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('textbook_id', sa.Integer(), nullable=True),
    sa.Column('paper_id', sa.Integer(), nullable=True),
    sa.Column('page', sa.Integer(), nullable=False),
    sa.Column('has_context', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['paper_id'], ['training_sources.research_paper_sources.id'], ),
    sa.ForeignKeyConstraint(['textbook_id'], ['training_sources.textbook_sources.textbook_id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='training_sources'
    )
    op.create_index(op.f('ix_training_sources_image_sources_id'), 'image_sources', ['id'], unique=True, schema='training_sources')
    op.drop_index('ix_research_paper_sources_id', table_name='research_paper_sources')
    op.drop_table('research_paper_sources')
    op.drop_index('ix_image_sources_id', table_name='image_sources')
    op.drop_table('image_sources')
    op.drop_table('part')
    op.drop_index('ix_textbook_sources_textbook_id', table_name='textbook_sources')
    op.drop_table('textbook_sources')
    op.drop_table('body_part_counts')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('body_part_counts',
    sa.Column('id', postgresql.ENUM('n', 'f', 'h', 'a', 'l', 's', 'c', 'b', 'e', name='body_id_enum'), autoincrement=False, nullable=False),
    sa.Column('counts', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('where', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['where'], ['part.id'], name='body_part_counts_where_fkey'),
    sa.PrimaryKeyConstraint('id', name='body_part_counts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('textbook_sources',
    sa.Column('textbook_id', sa.INTEGER(), server_default=sa.text("nextval('textbook_sources_textbook_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('textbook_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_added', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('where', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('part_id', postgresql.ENUM('n', 'f', 'h', 'a', 'l', 's', 'c', 'b', 'e', name='body_id_enum'), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['part_id'], ['body_part_counts.id'], name='textbook_sources_part_id_fkey'),
    sa.PrimaryKeyConstraint('textbook_id', name='textbook_sources_pkey'),
    sa.UniqueConstraint('textbook_name', 'author', name='uq_textbook_author'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_textbook_sources_textbook_id', 'textbook_sources', ['textbook_id'], unique=True)
    op.create_table('part',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('part_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('upper_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lower_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint('id = ANY (ARRAY[1, 2, 3])', name='check_valid_bp_id'),
    sa.PrimaryKeyConstraint('id', name='part_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('image_sources',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_added', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('textbook_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('paper_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('page', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('has_context', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['paper_id'], ['research_paper_sources.id'], name='image_sources_paper_id_fkey'),
    sa.ForeignKeyConstraint(['textbook_id'], ['textbook_sources.textbook_id'], name='image_sources_textbook_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='image_sources_pkey')
    )
    op.create_index('ix_image_sources_id', 'image_sources', ['id'], unique=True)
    op.create_table('research_paper_sources',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('paper_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('where', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('part_id', postgresql.ENUM('n', 'f', 'h', 'a', 'l', 's', 'c', 'b', 'e', name='body_id_enum'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['part_id'], ['body_part_counts.id'], name='research_paper_sources_part_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='research_paper_sources_pkey'),
    sa.UniqueConstraint('paper_name', name='uq_textbook')
    )
    op.create_index('ix_research_paper_sources_id', 'research_paper_sources', ['id'], unique=True)
    op.drop_index(op.f('ix_training_sources_image_sources_id'), table_name='image_sources', schema='training_sources')
    op.drop_table('image_sources', schema='training_sources')
    op.drop_index(op.f('ix_training_sources_textbook_sources_textbook_id'), table_name='textbook_sources', schema='training_sources')
    op.drop_table('textbook_sources', schema='training_sources')
    op.drop_index(op.f('ix_training_sources_research_paper_sources_id'), table_name='research_paper_sources', schema='training_sources')
    op.drop_table('research_paper_sources', schema='training_sources')
    op.drop_table('body_part_counts', schema='training_sources')
    op.drop_table('part', schema='training_sources')
    op.drop_table('user_info', schema='frontend_data')
    # ### end Alembic commands ###
